[{"D:\\r-test\\backup\\src\\index.tsx":"1","D:\\r-test\\backup\\src\\reportWebVitals.ts":"2","D:\\r-test\\backup\\src\\modules\\index.ts":"3","D:\\r-test\\backup\\src\\App.tsx":"4","D:\\r-test\\backup\\src\\modules\\delivery\\index.ts":"5","D:\\r-test\\backup\\src\\modules\\component\\area\\area.ts":"6","D:\\r-test\\backup\\src\\containers\\delivery\\DeliveryUContainer.tsx":"7","D:\\r-test\\backup\\src\\containers\\delivery\\DeliveryAContainer.tsx":"8","D:\\r-test\\backup\\src\\containers\\destination\\DestinationMngContainer.tsx":"9","D:\\r-test\\backup\\src\\containers\\rider\\RiderControlContainer.tsx":"10","D:\\r-test\\backup\\src\\modules\\delivery\\types.ts":"11","D:\\r-test\\backup\\src\\modules\\delivery\\reducer.ts":"12","D:\\r-test\\backup\\src\\modules\\delivery\\actions.ts":"13","D:\\r-test\\backup\\src\\modules\\destination\\index.ts":"14","D:\\r-test\\backup\\src\\modules\\delivery\\sagas.ts":"15","D:\\r-test\\backup\\src\\modules\\common\\index.ts":"16","D:\\r-test\\backup\\src\\components\\rider\\RiderControl.tsx":"17","D:\\r-test\\backup\\src\\components\\delivery\\DeliveryUnable.tsx":"18","D:\\r-test\\backup\\src\\components\\delivery\\DeliveryAvailable.tsx":"19","D:\\r-test\\backup\\src\\components\\destinationManagement\\DestinationManagement.tsx":"20","D:\\r-test\\backup\\src\\modules\\destination\\types.ts":"21","D:\\r-test\\backup\\src\\modules\\destination\\reducer.ts":"22","D:\\r-test\\backup\\src\\modules\\destination\\sagas.ts":"23","D:\\r-test\\backup\\src\\modules\\destination\\actions.ts":"24","D:\\r-test\\backup\\src\\modules\\common\\reducer.ts":"25","D:\\r-test\\backup\\src\\modules\\common\\types.ts":"26","D:\\r-test\\backup\\src\\modules\\common\\actions.ts":"27","D:\\r-test\\backup\\src\\modules\\common\\sagas.ts":"28","D:\\r-test\\backup\\src\\lib\\reducerUtils.ts":"29","D:\\r-test\\backup\\src\\lib\\createAsyncSaga.ts":"30","D:\\r-test\\backup\\src\\api\\delivery\\delivery.ts":"31","D:\\r-test\\backup\\src\\components\\common\\area\\GunGuSelect.tsx":"32","D:\\r-test\\backup\\src\\components\\common\\materialButton.tsx":"33","D:\\r-test\\backup\\src\\components\\common\\area\\SidoSelect.tsx":"34","D:\\r-test\\backup\\src\\components\\common\\area\\DongSelect.tsx":"35","D:\\r-test\\backup\\src\\components\\common\\area\\RiSelector.tsx":"36","D:\\r-test\\backup\\src\\components\\destinationManagement\\popup\\CopyDestinationPrivate.tsx":"37","D:\\r-test\\backup\\src\\components\\destinationManagement\\popup\\CopyDestination.tsx":"38","D:\\r-test\\backup\\src\\api\\destination\\destination.ts":"39","D:\\r-test\\backup\\src\\api\\client.ts":"40","D:\\r-test\\backup\\src\\api\\common\\area\\areaAPI.ts":"41","D:\\r-test\\backup\\src\\containers\\shop\\ShopfeeContainer.tsx":"42","D:\\r-test\\backup\\src\\components\\shop\\ShopFee.tsx":"43","D:\\r-test\\backup\\src\\components\\shop\\popup\\CopyShopfee.tsx":"44","D:\\r-test\\backup\\src\\containers\\shop\\ShoplocationContainer.tsx":"45","D:\\r-test\\backup\\src\\components\\shop\\ShopLocation.tsx":"46","D:\\r-test\\backup\\src\\components\\shop\\popup\\ShopLocation.tsx":"47"},{"size":1078,"mtime":1611899855696,"results":"48","hashOfConfig":"49"},{"size":425,"mtime":1610519035455,"results":"50","hashOfConfig":"49"},{"size":1112,"mtime":1611886830178,"results":"51","hashOfConfig":"49"},{"size":1157,"mtime":1612167351744,"results":"52","hashOfConfig":"49"},{"size":108,"mtime":1611887012720,"results":"53","hashOfConfig":"49"},{"size":1814,"mtime":1611812508801,"results":"54","hashOfConfig":"49"},{"size":259,"mtime":1611888333177,"results":"55","hashOfConfig":"49"},{"size":268,"mtime":1611888343832,"results":"56","hashOfConfig":"49"},{"size":417,"mtime":1611825011106,"results":"57","hashOfConfig":"49"},{"size":256,"mtime":1611888290062,"results":"58","hashOfConfig":"49"},{"size":591,"mtime":1611886952997,"results":"59","hashOfConfig":"49"},{"size":1212,"mtime":1611887277587,"results":"60","hashOfConfig":"49"},{"size":1118,"mtime":1611887331834,"results":"61","hashOfConfig":"49"},{"size":108,"mtime":1611812503591,"results":"62","hashOfConfig":"49"},{"size":939,"mtime":1611899930052,"results":"63","hashOfConfig":"49"},{"size":108,"mtime":1611812616079,"results":"64","hashOfConfig":"49"},{"size":24268,"mtime":1612161955038,"results":"65","hashOfConfig":"49"},{"size":14724,"mtime":1611901349175,"results":"66","hashOfConfig":"49"},{"size":18529,"mtime":1611901309197,"results":"67","hashOfConfig":"49"},{"size":17098,"mtime":1611901418711,"results":"68","hashOfConfig":"49"},{"size":473,"mtime":1611812498789,"results":"69","hashOfConfig":"49"},{"size":895,"mtime":1611812501870,"results":"70","hashOfConfig":"49"},{"size":651,"mtime":1611812602882,"results":"71","hashOfConfig":"49"},{"size":1039,"mtime":1611812505541,"results":"72","hashOfConfig":"49"},{"size":1464,"mtime":1611812619737,"results":"73","hashOfConfig":"49"},{"size":625,"mtime":1611812589228,"results":"74","hashOfConfig":"49"},{"size":1693,"mtime":1611824044246,"results":"75","hashOfConfig":"49"},{"size":1054,"mtime":1611812611200,"results":"76","hashOfConfig":"49"},{"size":1730,"mtime":1611824053446,"results":"77","hashOfConfig":"49"},{"size":1006,"mtime":1611812517553,"results":"78","hashOfConfig":"49"},{"size":386,"mtime":1611889097461,"results":"79","hashOfConfig":"49"},{"size":1501,"mtime":1612155021119,"results":"80","hashOfConfig":"49"},{"size":1650,"mtime":1611890042333,"results":"81","hashOfConfig":"49"},{"size":1330,"mtime":1612155031008,"results":"82","hashOfConfig":"49"},{"size":1630,"mtime":1612155012591,"results":"83","hashOfConfig":"49"},{"size":1441,"mtime":1612155026351,"results":"84","hashOfConfig":"49"},{"size":6094,"mtime":1611901499406,"results":"85","hashOfConfig":"49"},{"size":4057,"mtime":1611901438831,"results":"86","hashOfConfig":"49"},{"size":493,"mtime":1611881132938,"results":"87","hashOfConfig":"49"},{"size":88,"mtime":1611812556090,"results":"88","hashOfConfig":"49"},{"size":821,"mtime":1611881135634,"results":"89","hashOfConfig":"49"},{"size":230,"mtime":1612163019076,"results":"90","hashOfConfig":"49"},{"size":16279,"mtime":1612166623326,"results":"91","hashOfConfig":"49"},{"size":11896,"mtime":1612166709055,"results":"92","hashOfConfig":"49"},{"size":255,"mtime":1612167309373,"results":"93","hashOfConfig":"49"},{"size":12922,"mtime":1612168670919,"results":"94","hashOfConfig":"49"},{"size":4641,"mtime":1612168768800,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"190r8ir",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\r-test\\backup\\src\\index.tsx",[],["198","199","200","201","202"],"D:\\r-test\\backup\\src\\reportWebVitals.ts",[],"D:\\r-test\\backup\\src\\modules\\index.ts",[],"D:\\r-test\\backup\\src\\App.tsx",[],"D:\\r-test\\backup\\src\\modules\\delivery\\index.ts",[],"D:\\r-test\\backup\\src\\modules\\component\\area\\area.ts",[],"D:\\r-test\\backup\\src\\containers\\delivery\\DeliveryUContainer.tsx",[],"D:\\r-test\\backup\\src\\containers\\delivery\\DeliveryAContainer.tsx",[],"D:\\r-test\\backup\\src\\containers\\destination\\DestinationMngContainer.tsx",[],"D:\\r-test\\backup\\src\\containers\\rider\\RiderControlContainer.tsx",[],"D:\\r-test\\backup\\src\\modules\\delivery\\types.ts",[],"D:\\r-test\\backup\\src\\modules\\delivery\\reducer.ts",[],"D:\\r-test\\backup\\src\\modules\\delivery\\actions.ts",[],"D:\\r-test\\backup\\src\\modules\\destination\\index.ts",[],"D:\\r-test\\backup\\src\\modules\\delivery\\sagas.ts",[],"D:\\r-test\\backup\\src\\modules\\common\\index.ts",[],"D:\\r-test\\backup\\src\\components\\rider\\RiderControl.tsx",["203","204"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Popup\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\n\r\n// 컬러픽커\r\nimport { SketchPicker } from 'react-color';\r\n\r\n// Ag-Grid\r\nimport { AgGridReact, AgGridColumn } from '@ag-grid-community/react';\r\nimport { AllModules, GridApi } from '@ag-grid-enterprise/all-modules';\r\nimport '@ag-grid-enterprise/all-modules/dist/styles/ag-grid.css';\r\nimport '@ag-grid-enterprise/all-modules/dist/styles/ag-theme-alpine.css';\r\n\r\n/* 체크박스 */\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n/* 슬라이더 */\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider, { SliderTypeMap } from '@material-ui/core/Slider';\r\n\r\n/* 프로그래스 */\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport Search from '@material-ui/icons/Search';\r\nimport Home from '@material-ui/icons/Home';\r\nimport Spellcheck from '@material-ui/icons/Spellcheck';\r\n\r\nimport FormatColorFill from '@material-ui/icons/FormatColorFill';\r\nimport Mail from '@material-ui/icons/Mail';\r\n\r\n/* 리액트 아이콘 */\r\nimport { RiEBike2Fill } from '@react-icons/all-files/ri/RiEBike2Fill';\r\n\r\n// Components\r\nimport { useStyles } from '../common/materialButton';\r\n\r\n// CSS\r\nimport '../../css/map/destmanager.css';\r\nimport '../../css/map/copypop.css';\r\n\r\n// Action\r\nimport { getDestListAsync, deleteDestListAsync } from '../../modules/destination/actions';\r\nimport {\r\n  getCenteruserListAsync1,\r\n  getCenteruserListAsync2,\r\n  getCenteruserListAsync3,\r\n} from '../../modules/delivery/actions';\r\n\r\n// API\r\nimport {\r\n  destListSendData,\r\n  deleteDestListSendData,\r\n} from '../../api/interface/destination/destination';\r\nimport { CenterUserInfoSendData } from '../../api/interface/delivery/delivery';\r\n\r\nimport SidoSelect from '../common/area/SidoSelect';\r\nimport GunGuSelect from '../common/area/GunGuSelect';\r\nimport DongSelect from '../common/area/DongSelect';\r\nimport RiSelector from '../common/area/RiSelector';\r\n\r\nimport { RootState } from '../../modules';\r\n\r\nconst RiderControl = () => {\r\n  const classes = useStyles();\r\n\r\n  const colorRef = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n  const sTimerReference = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n  const sliderReferencd = useRef() as React.MutableRefObject<HTMLSpanElement>;\r\n\r\n  const [stateC, setStateC] = useState({\r\n    checkedA: false,\r\n    checkedB: false,\r\n  });\r\n\r\n  const [diff, setDiff] = useState(30);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const [backgroundC, setBackgroundC] = useState({\r\n    displayColorPicker: false,\r\n    hsl: { h: 249.99999999999994, s: 0.6187778227438285, l: 0.23820439999999998, a: 1 },\r\n    color: {\r\n      r: '241',\r\n      g: '112',\r\n      b: '19',\r\n      a: '1',\r\n    },\r\n  });\r\n\r\n  const handleChangeComplete = (color: any) => {\r\n    colorRef.current.style.backgroundColor = color.hex;\r\n    setBackgroundC(color);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // searchOrder();\r\n  }, [stateC.checkedB]);\r\n\r\n  const changeSec = () => {\r\n    setDiff(parseInt(sliderReferencd.current.innerText, 10));\r\n    setProgress(0);\r\n  };\r\n\r\n  const oldDiff = Math.round(100 / diff);\r\n  const oldProgress = progress;\r\n\r\n  const handleChange = (event: any) => {\r\n    setStateC({ ...stateC, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  let timer: any = null;\r\n  useEffect(() => {\r\n    if (stateC.checkedB === true) {\r\n      timer = setInterval(() => {\r\n        setProgress(() => {\r\n          if (oldProgress === 100) {\r\n            // searchOrder();\r\n            return 0;\r\n          }\r\n          return Math.min(oldProgress + oldDiff, 100);\r\n        });\r\n      }, 1000);\r\n    } else {\r\n      setProgress(0);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [stateC.checkedB, oldDiff, oldProgress]);\r\n\r\n  const [openD, setOpenD] = useState(false);\r\n\r\n  const { loading, data, error } = useSelector((state: RootState) => state.destList.destList);\r\n\r\n  const {\r\n    loading: getCenterUserLoading,\r\n    data: centerUserData,\r\n    error: centerUserError,\r\n  } = useSelector((state: RootState) => state.centerUserList1.centerUserList1);\r\n  const { loading: delDestLoading, data: delDestData, error: delDestError } = useSelector(\r\n    (state: RootState) => state.deleteDestList.result\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(data);\r\n  console.log(centerUserData);\r\n\r\n  // 목적지 타입\r\n  const [destType, setDestType] = useState<string>('%');\r\n  // 목적지 명\r\n  const [destName, setDestName] = useState<string>('');\r\n\r\n  const searchSendData: destListSendData = {\r\n    JobGbn: '1',\r\n    CCCode: '',\r\n    DestType: '%',\r\n    DestName: '%',\r\n  };\r\n\r\n  const centerUserSendData: CenterUserInfoSendData = {\r\n    JobGbn: '1',\r\n    UserID: '김한욱12',\r\n    McodeString: '',\r\n    CCCode: '',\r\n    HelpCenter: '',\r\n  };\r\n\r\n  const searchDestination = () => {\r\n    searchSendData.JobGbn = '1';\r\n    searchSendData.CCCode = '3452';\r\n    searchSendData.DestType = destType;\r\n    searchSendData.DestName = destName === '' ? '%' : `%${destName}%`;\r\n\r\n    dispatch(getDestListAsync.request(searchSendData));\r\n\r\n    dispatch(getCenteruserListAsync1.request(centerUserSendData));\r\n    centerUserSendData.JobGbn = '3';\r\n    centerUserSendData.UserID = '';\r\n    centerUserSendData.McodeString = '6';\r\n    centerUserSendData.CCCode = '';\r\n    centerUserSendData.HelpCenter = 'HC900';\r\n\r\n    dispatch(getCenteruserListAsync2.request(centerUserSendData));\r\n\r\n    centerUserSendData.JobGbn = '5';\r\n    centerUserSendData.UserID = '';\r\n    centerUserSendData.McodeString = '6';\r\n    centerUserSendData.CCCode = '3452';\r\n    centerUserSendData.HelpCenter = '';\r\n\r\n    dispatch(getCenteruserListAsync3.request(centerUserSendData));\r\n  };\r\n\r\n  // 최초 로드 시 미리 목적지 데이터 조회\r\n  useEffect(() => {\r\n    if (!openD) {\r\n      searchDestination();\r\n    }\r\n  }, [openD]);\r\n\r\n  // 검색 버튼 클릭\r\n  const onSearchClick = () => {\r\n    searchDestination();\r\n  };\r\n\r\n  const [gridApi, setGridApi] = useState<GridApi>();\r\n\r\n  const onGridReady = (params: any) => {\r\n    setGridApi(params.api);\r\n  };\r\n\r\n  const onSelectDelete = () => {\r\n    const sendData: deleteDestListSendData = {\r\n      Seqs: [],\r\n    };\r\n    if (gridApi != null) {\r\n      const checkData: any[] = gridApi.getSelectedNodes();\r\n      if (checkData.length > 0) {\r\n        checkData.forEach((idata) => {\r\n          sendData.Seqs.push(String(idata.data.SEQNO));\r\n        });\r\n        dispatch(deleteDestListAsync.request(sendData));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!delDestLoading && delDestData) {\r\n      const result: string = String(delDestData);\r\n      const resultMessage: string[] = result.split('@');\r\n      if (resultMessage.length > 1) {\r\n        if (resultMessage[0] !== '00') {\r\n          console.log(resultMessage[1]);\r\n        }\r\n        setOpenD((o) => !o);\r\n      }\r\n    }\r\n  }, [delDestLoading, delDestData]);\r\n\r\n  const searchHidden = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\r\n  // 검색창 열기 / 닫기\r\n  const searchHiddenOpen = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    if (searchHidden.current.style.display === 'block') searchHidden.current.style.display = 'none';\r\n    else searchHidden.current.style.display = 'block';\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\" style={{ border: '1px solid', width: '1332px', height: '830px' }}>\r\n      <div className=\"leftArea fl\" style={{ width: '400px', height: '818px' }}>\r\n        <div className=\"tabmenu fl ml02 mt03\" style={{ width: '489px', height: '360px' }}>\r\n          <ul>\r\n            <li id=\"tab1\" className=\"btnCon\">\r\n              <input type=\"radio\" name=\"tabmenu\" checked id=\"tabmenu1\" />\r\n              <label htmlFor=\"tabmenu1\">\r\n                기사현황\r\n                <input type=\"text\" style={{ display: 'none' }} />\r\n              </label>\r\n\r\n              <div className=\"tabCon\" style={{ width: '394px' }}>\r\n                <div className=\"blueLabelSmall fl ml03 mt03\">상태</div>\r\n                <select className=\"fl baseSelectSmall mg03\">\r\n                  <option value=\"\">전체</option>\r\n                </select>\r\n                <div className=\"blueLabelSmall fl mt03\">시간</div>\r\n                <select className=\"fl baseSelectSmall mg03\">\r\n                  <option value=\"\">30</option>\r\n                </select>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"fl ml02 mt04\"\r\n                  style={{ width: '20px', height: '20px' }}\r\n                />\r\n                <div className=\"fl mt04 ml02\">가맹점</div>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  className=\"fl ml15 mt03\"\r\n                  style={{\r\n                    width: '65px',\r\n                    height: '22px',\r\n                  }}\r\n                  startIcon={<Search />}\r\n                >\r\n                  검색\r\n                </Button>\r\n                <div className=\"cb\" />\r\n\r\n                <div className=\"fl ml10 mt10\">\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox checked={stateC.checkedB} onChange={handleChange} name=\"checkedB\" />\r\n                    }\r\n                    label=\"자동조회\"\r\n                  />\r\n                </div>\r\n                <div\r\n                  className=\"fl ml05\"\r\n                  style={{\r\n                    width: '100px',\r\n                  }}\r\n                >\r\n                  <Typography id=\"discrete-slider\" gutterBottom className=\"ml05 mt06\">\r\n                    시간설정\r\n                  </Typography>\r\n                  <Slider\r\n                    ref={sliderReferencd}\r\n                    defaultValue={30}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={5}\r\n                    marks\r\n                    min={5}\r\n                    max={60}\r\n                    onClick={changeSec}\r\n                    onChange={changeSec}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  ref={sTimerReference}\r\n                  value={diff}\r\n                  className=\"fl ml20 mt15\"\r\n                  style={{ width: '20px' }}\r\n                />\r\n\r\n                <div\r\n                  className=\"fl mt15\"\r\n                  style={{\r\n                    width: '100px',\r\n                  }}\r\n                >\r\n                  초\r\n                </div>\r\n                <div className=\"fl ml20 mt03\" style={{ width: '150px' }}>\r\n                  <LinearProgress variant=\"determinate\" value={progress} />\r\n                </div>\r\n                <div className=\"cb\" />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"fl ml03 mt02\"\r\n                  style={{ width: '20px', height: '20px' }}\r\n                />\r\n                <div className=\"fl mt02 ml02\">라이더 전체보기</div>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"fl ml02 mt02\"\r\n                  style={{ width: '20px', height: '20px' }}\r\n                />\r\n                <div className=\"fl mt02 ml02\">동단위 보기</div>\r\n                <div className=\"blueLabelSmall fl ml10\" style={{ width: '50px' }}>\r\n                  라인두께\r\n                </div>\r\n                <select className=\"fl baseSelectSmall ml03\" style={{ width: '30px' }}>\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"2\">2</option>\r\n                  <option value=\"3\">3</option>\r\n                  <option value=\"4\">4</option>\r\n                  <option value=\"5\">5</option>\r\n                </select>\r\n                <Popup\r\n                  trigger={\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      className=\"fl ml05\"\r\n                      style={{\r\n                        width: '90px',\r\n                        height: '22px',\r\n                      }}\r\n                      startIcon={<FormatColorFill />}\r\n                    >\r\n                      라인색상\r\n                    </Button>\r\n                  }\r\n                  position=\"bottom center\"\r\n                  contentStyle={{ width: '220px' }}\r\n                >\r\n                  <div>\r\n                    <SketchPicker color={backgroundC.hsl} onChange={handleChangeComplete} />\r\n                  </div>\r\n                </Popup>\r\n                <div\r\n                  ref={colorRef}\r\n                  className=\"fl ml01\"\r\n                  style={{\r\n                    width: '10px',\r\n                    height: '10px',\r\n                    backgroundColor: 'black',\r\n                    borderRadius: '4px',\r\n                  }}\r\n                />\r\n                <div className=\"cb\" />\r\n                <div\r\n                  className=\"mt10 wd100\"\r\n                  style={{ height: '20px', borderTop: '2px solid #cacbd3' }}\r\n                >\r\n                  <RiEBike2Fill className=\"fl ml05 mt05\" />\r\n                  <div className=\"fl ml02 blue\">기사현황 </div>\r\n                  <div\r\n                    className=\"fl red\"\r\n                    style={{ marginLeft: '90px', textDecoration: 'underline' }}\r\n                  >\r\n                    ※ 전체 보기 선택 시 속도가 느려질 수 있습니다.\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    height: '175px',\r\n                    width: '386px',\r\n                    fontSize: '9px',\r\n                  }}\r\n                  className=\"ag-theme-alpine ml03 mb03\"\r\n                >\r\n                  <AgGridReact\r\n                    modules={AllModules}\r\n                    defaultColDef={{\r\n                      flex: 1,\r\n                      resizable: true,\r\n                      menuTabs: ['columnsMenuTab'],\r\n                      columnsMenuParams: { suppressSyncLayoutWithGrid: true },\r\n                    }}\r\n                    statusBar={{\r\n                      statusPanels: [\r\n                        {\r\n                          statusPanel: 'agTotalAndFilteredRowCountComponent',\r\n                          align: 'left',\r\n                        },\r\n                        {\r\n                          statusPanel: 'agTotalRowCountComponent',\r\n                          align: 'center',\r\n                        },\r\n                        { statusPanel: 'agFilteredRowCountComponent' },\r\n                        { statusPanel: 'agSelectedRowCountComponent' },\r\n                        { statusPanel: 'agAggregationComponent' },\r\n                      ],\r\n                    }}\r\n                    rowSelection=\"multiple\"\r\n                    headerHeight={22}\r\n                  >\r\n                    <AgGridColumn\r\n                      headerName=\"시군구\"\r\n                      field=\"ORDER_NO\"\r\n                      minWidth={120}\r\n                      columnsMenuParams={{\r\n                        suppressColumnFilter: true,\r\n                        suppressColumnSelectAll: true,\r\n                        suppressColumnExpandAll: true,\r\n                      }}\r\n                      filter=\"agTextColumnFilter\"\r\n                    />\r\n                    <AgGridColumn\r\n                      headerName=\"읍면동\"\r\n                      field=\"RIDER_NAME\"\r\n                      minWidth={120}\r\n                      columnsMenuParams={{ contractColumnSelection: true }}\r\n                      filter=\"agTextColumnFilter\"\r\n                    />\r\n                    <AgGridColumn\r\n                      headerName=\"기사수\"\r\n                      field=\"RIDER_NAME\"\r\n                      minWidth={120}\r\n                      columnsMenuParams={{ contractColumnSelection: true }}\r\n                      filter=\"agTextColumnFilter\"\r\n                    />\r\n                  </AgGridReact>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li id=\"tab2\" className=\"btnCon\" style={{ display: 'none' }}>\r\n              <label htmlFor=\"tabmenu2\">\r\n                menu2\r\n                <input type=\"text\" style={{ display: 'none' }} />\r\n              </label>\r\n              <input type=\"radio\" name=\"tabmenu\" id=\"tabmenu2\" />\r\n              <div className=\"tabCon\">2</div>\r\n            </li>\r\n            <li id=\"tab3\" className=\"btnCon\" style={{ display: 'none' }}>\r\n              <label htmlFor=\"tabmenu3\">\r\n                menu3\r\n                <input type=\"text\" style={{ display: 'none' }} />\r\n              </label>\r\n              <input type=\"radio\" name=\"tabmenu\" id=\"tabmenu3\" />\r\n              <div className=\"tabCon\">3</div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"cb\" />\r\n        <div className=\"fl wd80\">\r\n          <div className=\"blueLabelSmall fl mt03 ml03\" style={{ width: '60px' }}>\r\n            기사번호\r\n          </div>\r\n          <input type=\"text\" className=\"fl baseInputSmall mt03 ml03\" />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml03 mt03\"\r\n            style={{ width: '65px', height: '22px' }}\r\n            startIcon={<Search />}\r\n          >\r\n            찾기\r\n          </Button>\r\n          <input type=\"radio\" name=\"selType\" className=\"fl ml20 mt09\" style={{}} />\r\n          <div className=\"fl mt07 ml02\">기사</div>\r\n          <input type=\"radio\" name=\"selType\" className=\"fl ml15 mt09\" style={{}} />\r\n          <div className=\"fl mt07 ml02\">가맹점</div>\r\n          <div className=\"cb\" />\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"fl ml03 mt08\"\r\n            style={{ width: '20px', height: '20px' }}\r\n          />\r\n          <div className=\"fl ml03 mt10\">마우스이동시 기사운행내역 팝업보기</div>\r\n        </div>\r\n        <div className=\"fl wd20\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fr mr03 mt02\"\r\n            style={{ width: '65px', height: '60px' }}\r\n            startIcon={<Search />}\r\n          >\r\n            검색\r\n          </Button>\r\n        </div>\r\n        <div className=\"cb\" />\r\n        <div className=\"mt10 wd100\" style={{ height: '20px', borderTop: '2px solid #cacbd3' }}>\r\n          <RiEBike2Fill className=\"fl ml05 mt05\" />\r\n          <div className=\"fl ml02 mt03 blue\">기사목록 (총</div>\r\n          <div className=\"fl ml02 mt03 blue\">0</div>\r\n          <div className=\"fl ml02 mt03 blue\">건)</div>\r\n        </div>\r\n        <div className=\"cb\" />\r\n        <div\r\n          style={{\r\n            height: '278px',\r\n            width: '394px',\r\n            fontSize: '9px',\r\n          }}\r\n          className=\"ag-theme-alpine ml03 mt03 mb03\"\r\n        >\r\n          <AgGridReact\r\n            modules={AllModules}\r\n            defaultColDef={{\r\n              flex: 1,\r\n              resizable: true,\r\n              menuTabs: ['columnsMenuTab'],\r\n              columnsMenuParams: { suppressSyncLayoutWithGrid: true },\r\n            }}\r\n            rowSelection=\"multiple\"\r\n            headerHeight={22}\r\n          >\r\n            <AgGridColumn\r\n              headerName=\"\"\r\n              field=\"check\"\r\n              minWidth={30}\r\n              headerCheckboxSelection\r\n              headerCheckboxSelectionFilteredOnly\r\n              checkboxSelection\r\n            />\r\n            <AgGridColumn\r\n              headerName=\"번호\"\r\n              field=\"ORDER_NO\"\r\n              minWidth={80}\r\n              columnsMenuParams={{\r\n                suppressColumnFilter: true,\r\n                suppressColumnSelectAll: true,\r\n                suppressColumnExpandAll: true,\r\n              }}\r\n              filter=\"agTextColumnFilter\"\r\n            />\r\n            <AgGridColumn\r\n              headerName=\"상태\"\r\n              field=\"RIDER_NAME\"\r\n              minWidth={80}\r\n              columnsMenuParams={{ contractColumnSelection: true }}\r\n              filter=\"agTextColumnFilter\"\r\n            />\r\n            <AgGridColumn\r\n              headerName=\"기사명\"\r\n              field=\"RIDER_NAME\"\r\n              minWidth={90}\r\n              columnsMenuParams={{ contractColumnSelection: true }}\r\n              filter=\"agTextColumnFilter\"\r\n            />\r\n            <AgGridColumn\r\n              headerName=\"시군구\"\r\n              field=\"RIDER_NAME\"\r\n              minWidth={90}\r\n              columnsMenuParams={{ contractColumnSelection: true }}\r\n              filter=\"agTextColumnFilter\"\r\n            />\r\n            <AgGridColumn\r\n              headerName=\"읍면동\"\r\n              field=\"RIDER_NAME\"\r\n              minWidth={90}\r\n              columnsMenuParams={{ contractColumnSelection: true }}\r\n              filter=\"agTextColumnFilter\"\r\n            />\r\n            <AgGridColumn\r\n              headerName=\"수량\"\r\n              field=\"RIDER_NAME\"\r\n              minWidth={80}\r\n              columnsMenuParams={{ contractColumnSelection: true }}\r\n              filter=\"agTextColumnFilter\"\r\n            />\r\n          </AgGridReact>\r\n        </div>\r\n        <textarea\r\n          className=\"fl ml03 mt03\"\r\n          style={{ width: '288px', height: '69px', resize: 'none' }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          className=\"fr mr03 mt03\"\r\n          style={{ width: '100px', height: '70px' }}\r\n          startIcon={<Mail />}\r\n        >\r\n          메시지전송\r\n        </Button>\r\n      </div>\r\n      <div className=\"mapArea fl\" style={{ width: '913px', height: '818px' }}>\r\n        <div className=\"fl\">\r\n          <SidoSelect style={{ width: '80px', height: '23px' }} />\r\n          <GunGuSelect style={{ width: '80px', height: '23px' }} />\r\n          <DongSelect style={{ width: '80px', height: '23px' }} />\r\n          <RiSelector style={{ width: '80px', height: '23px' }} />\r\n        </div>\r\n        <input type=\"text\" className=\"fl baseInputSmall ml02 mt05\" style={{ width: '80px' }} />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          className=\"fl ml02 mt05\"\r\n          style={{ width: '90px', height: '22px' }}\r\n          startIcon={<Home />}\r\n        >\r\n          지번\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          className=\"fl ml02 mt05\"\r\n          style={{ width: '90px', height: '22px' }}\r\n          startIcon={<Spellcheck />}\r\n        >\r\n          명칭\r\n        </Button>\r\n\r\n        <input type=\"button\" className=\"areaButtonSmall ml03 mt05\" value=\"1\" />\r\n        <input type=\"button\" className=\"areaButtonSmall ml03 mt05\" value=\"2\" />\r\n        <input type=\"button\" className=\"areaButtonSmall ml03 mt05\" value=\"3\" />\r\n        <input type=\"button\" className=\"areaButtonSmall ml03 mt05\" value=\"4\" />\r\n        <input type=\"button\" className=\"areaButtonSmall ml03 mt05\" value=\"5\" />\r\n        <input type=\"button\" className=\"areaButtonSmall ml03 mt05\" value=\"6\" />\r\n        <input type=\"button\" className=\"areaButtonSmall ml03 mt05\" value=\"7\" />\r\n        <input type=\"button\" className=\"areaButtonSmall ml03 mt05\" value=\"8\" />\r\n        <input type=\"button\" className=\"areaButtonSmall ml03 mt05\" value=\"9\" />\r\n        <input type=\"button\" className=\"areaButtonSmall ml03 mt05\" value=\"10\" />\r\n        <input type=\"button\" className=\"areaButtonSmall ml03 mt05\" value=\"11\" />\r\n        <input type=\"button\" className=\"areaButtonSmall ml03 mt05\" value=\"12\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(RiderControl);\r\n","D:\\r-test\\backup\\src\\components\\delivery\\DeliveryUnable.tsx",["205"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal } from '@material-ui/core';\r\n// CSS\r\nimport '../../css/map/destmanager.css';\r\nimport '../../css/map/copypop.css';\r\n\r\n// Ag-Grid\r\nimport { AgGridReact, AgGridColumn } from '@ag-grid-community/react';\r\nimport { AllModules, GridApi } from '@ag-grid-enterprise/all-modules';\r\nimport '@ag-grid-enterprise/all-modules/dist/styles/ag-grid.css';\r\nimport '@ag-grid-enterprise/all-modules/dist/styles/ag-theme-alpine.css';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport Search from '@material-ui/icons/Search';\r\nimport Close from '@material-ui/icons/Close';\r\nimport NoteAdd from '@material-ui/icons/NoteAdd';\r\nimport DeleteSweep from '@material-ui/icons/DeleteSweep';\r\nimport CheckBox from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlined from '@material-ui/icons/CheckBoxOutlined';\r\nimport Save from '@material-ui/icons/Save';\r\n\r\nimport Home from '@material-ui/icons/Home';\r\nimport Spellcheck from '@material-ui/icons/Spellcheck';\r\nimport AddLocation from '@material-ui/icons/AddLocation';\r\nimport LocationOff from '@material-ui/icons/LocationOff';\r\nimport DeleteForever from '@material-ui/icons/DeleteForever';\r\n\r\n// Popup\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\n\r\n// Components\r\nimport { useStyles } from '../common/materialButton';\r\n\r\n// Action\r\nimport { getDestListAsync, deleteDestListAsync } from '../../modules/destination/actions';\r\nimport {\r\n  getCenteruserListAsync1,\r\n  getCenteruserListAsync2,\r\n  getCenteruserListAsync3,\r\n} from '../../modules/delivery/actions';\r\n\r\n// API\r\nimport {\r\n  destListSendData,\r\n  deleteDestListSendData,\r\n} from '../../api/interface/destination/destination';\r\nimport { CenterUserInfoSendData } from '../../api/interface/delivery/delivery';\r\n\r\nimport SidoSelect from '../common/area/SidoSelect';\r\nimport GunGuSelect from '../common/area/GunGuSelect';\r\nimport DongSelect from '../common/area/DongSelect';\r\nimport RiSelector from '../common/area/RiSelector';\r\n\r\nimport { RootState } from '../../modules';\r\n\r\nconst DeliveryUnable = () => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const closeModal = () => setOpen(false);\r\n\r\n  const [openP, setOpenP] = useState(false);\r\n  const closeModalP = () => setOpenP(false);\r\n\r\n  const [openD, setOpenD] = useState(false);\r\n\r\n  const { loading, data, error } = useSelector((state: RootState) => state.destList.destList);\r\n\r\n  const {\r\n    loading: getCenterUserLoading,\r\n    data: centerUserData,\r\n    error: centerUserError,\r\n  } = useSelector((state: RootState) => state.centerUserList1.centerUserList1);\r\n  const { loading: delDestLoading, data: delDestData, error: delDestError } = useSelector(\r\n    (state: RootState) => state.deleteDestList.result\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(data);\r\n  console.log(centerUserData);\r\n\r\n  // 목적지 타입\r\n  const [destType, setDestType] = useState<string>('%');\r\n  // 목적지 명\r\n  const [destName, setDestName] = useState<string>('');\r\n\r\n  const searchSendData: destListSendData = {\r\n    JobGbn: '1',\r\n    CCCode: '',\r\n    DestType: '%',\r\n    DestName: '%',\r\n  };\r\n\r\n  const centerUserSendData: CenterUserInfoSendData = {\r\n    JobGbn: '1',\r\n    UserID: '김한욱12',\r\n    McodeString: '',\r\n    CCCode: '',\r\n    HelpCenter: '',\r\n  };\r\n\r\n  const searchDestination = () => {\r\n    searchSendData.JobGbn = '1';\r\n    searchSendData.CCCode = '3452';\r\n    searchSendData.DestType = destType;\r\n    searchSendData.DestName = destName === '' ? '%' : `%${destName}%`;\r\n\r\n    dispatch(getDestListAsync.request(searchSendData));\r\n\r\n    dispatch(getCenteruserListAsync1.request(centerUserSendData));\r\n    centerUserSendData.JobGbn = '3';\r\n    centerUserSendData.UserID = '';\r\n    centerUserSendData.McodeString = '6';\r\n    centerUserSendData.CCCode = '';\r\n    centerUserSendData.HelpCenter = 'HC900';\r\n\r\n    dispatch(getCenteruserListAsync2.request(centerUserSendData));\r\n\r\n    centerUserSendData.JobGbn = '5';\r\n    centerUserSendData.UserID = '';\r\n    centerUserSendData.McodeString = '6';\r\n    centerUserSendData.CCCode = '3452';\r\n    centerUserSendData.HelpCenter = '';\r\n\r\n    dispatch(getCenteruserListAsync3.request(centerUserSendData));\r\n  };\r\n\r\n  // 최초 로드 시 미리 목적지 데이터 조회\r\n  useEffect(() => {\r\n    if (!openD) {\r\n      searchDestination();\r\n    }\r\n  }, [openD]);\r\n\r\n  const [gridApi, setGridApi] = useState<GridApi>();\r\n\r\n  const onGridReady = (params: any) => {\r\n    setGridApi(params.api);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!delDestLoading && delDestData) {\r\n      const result: string = String(delDestData);\r\n      const resultMessage: string[] = result.split('@');\r\n      if (resultMessage.length > 1) {\r\n        if (resultMessage[0] !== '00') {\r\n          console.log(resultMessage[1]);\r\n        }\r\n        setOpenD((o) => !o);\r\n      }\r\n    }\r\n  }, [delDestLoading, delDestData]);\r\n\r\n  const searchHidden = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"topArea\">\r\n        <div className=\"topAreaLeft\">\r\n          <div className=\"blueLabel fl mt05 ml10\" style={{}}>\r\n            지사명\r\n          </div>\r\n          <select className=\"fl baseSelect mg05\" style={{ width: '110px' }}>\r\n            <option value=\"\">1</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"topAreaRight\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fr mr10 mt05\"\r\n            style={{ width: '70px', height: '70px' }}\r\n            startIcon={<Close />}\r\n          >\r\n            닫기\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fr mr05 mt05\"\r\n            style={{ width: '70px', height: '70px' }}\r\n            startIcon={<Search />}\r\n          >\r\n            검색\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"cb\" />\r\n        <div className=\"blueText fl ml10 mt08\">\r\n          ※ 구역설정방법 : 구역설정시작 클릭 -&gt; 구역정보입력(명칭) -&gt; 우측마우스 구역설정\r\n          -&gt; 구역설정완료 클릭 <br />※ 구역이 겹치는경우 먼저등록된 구역이 적용됩니다. ※\r\n          구역리스트 더블클릭시 구역정보삭제\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"contentsArea\">\r\n        <div className=\"searchArea\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml10 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<NoteAdd />}\r\n          >\r\n            전체 사용함\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml05 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<DeleteSweep />}\r\n          >\r\n            전체 사용안함\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml10 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<CheckBox />}\r\n          >\r\n            전체 선택\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml05 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<CheckBoxOutlined />}\r\n          >\r\n            전체 취소\r\n          </Button>\r\n          <div className=\"blueLabelText fl ml05 mt05 \">지도확대</div>\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"1\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"2\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"3\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"4\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"5\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"6\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"7\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"8\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"9\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"10\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"11\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"12\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"13\" />\r\n          <div className=\"cb\" />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml10 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<AddLocation />}\r\n          >\r\n            구역설정시작\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml05 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<LocationOff />}\r\n          >\r\n            구역설정취소\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml10 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<Save />}\r\n          >\r\n            수정정보 저장\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml05 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<DeleteForever />}\r\n          >\r\n            선택삭제\r\n          </Button>\r\n          <div className=\"fl\">\r\n            <SidoSelect />\r\n            <GunGuSelect />\r\n            <DongSelect />\r\n            <RiSelector />\r\n          </div>\r\n          <input type=\"text\" className=\"fl baseInput ml05 mt05\" style={{ width: '90px' }} />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml05 mt05\"\r\n            style={{ width: '90px' }}\r\n            startIcon={<Home />}\r\n          >\r\n            지번검색\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml05 mt05\"\r\n            style={{ width: '90px' }}\r\n            startIcon={<Spellcheck />}\r\n          >\r\n            명칭검색\r\n          </Button>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml05 mt05\"\r\n            style={{ width: '100px' }}\r\n            startIcon={<Search />}\r\n          >\r\n            검색창열기\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"leftArea\">\r\n          <div className=\"blueLabelText fl ml10 mt05 \"> * 구역명칭</div>\r\n          <input type=\"text\" className=\"fl baseInput mg05\" style={{ width: '100px' }} />\r\n\r\n          <div className=\"blueLabelText fl ml10 mt05 \"> 그리기남은횟수</div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"fl baseInput mg05\"\r\n            value=\"100\"\r\n            style={{ width: '28px', color: '#c92929' }}\r\n          />\r\n\r\n          <div className=\"cb\" />\r\n          <div\r\n            style={{\r\n              width: '98%',\r\n              height: '720px',\r\n              marginTop: '5px',\r\n              padding: '0px 5px',\r\n            }}\r\n          >\r\n            <div\r\n              id=\"myGrid\"\r\n              style={{\r\n                height: '688px',\r\n                width: '100%',\r\n              }}\r\n              className=\"ag-theme-alpine\"\r\n            >\r\n              <AgGridReact\r\n                modules={AllModules}\r\n                defaultColDef={{\r\n                  flex: 1,\r\n                  resizable: true,\r\n                  menuTabs: ['columnsMenuTab'],\r\n                  columnsMenuParams: { suppressSyncLayoutWithGrid: true },\r\n                  floatingFilter: true,\r\n                }}\r\n                statusBar={{\r\n                  statusPanels: [\r\n                    {\r\n                      statusPanel: 'agTotalAndFilteredRowCountComponent',\r\n                      align: 'left',\r\n                    },\r\n                    {\r\n                      statusPanel: 'agTotalRowCountComponent',\r\n                      align: 'center',\r\n                    },\r\n                    { statusPanel: 'agFilteredRowCountComponent' },\r\n                    { statusPanel: 'agSelectedRowCountComponent' },\r\n                    { statusPanel: 'agAggregationComponent' },\r\n                  ],\r\n                }}\r\n                onGridReady={onGridReady}\r\n                rowData={data!}\r\n                rowSelection=\"multiple\"\r\n                headerHeight={40}\r\n              >\r\n                <AgGridColumn\r\n                  headerName=\"\"\r\n                  field=\"check\"\r\n                  minWidth={40}\r\n                  headerCheckboxSelection\r\n                  headerCheckboxSelectionFilteredOnly\r\n                  checkboxSelection\r\n                />\r\n                <AgGridColumn\r\n                  headerName=\"No\"\r\n                  field=\"ORDER_NO\"\r\n                  minWidth={100}\r\n                  columnsMenuParams={{\r\n                    suppressColumnFilter: true,\r\n                    suppressColumnSelectAll: true,\r\n                    suppressColumnExpandAll: true,\r\n                  }}\r\n                  filter=\"agTextColumnFilter\"\r\n                />\r\n                <AgGridColumn\r\n                  headerName=\"구역명\"\r\n                  field=\"RIDER_NAME\"\r\n                  minWidth={100}\r\n                  columnsMenuParams={{ contractColumnSelection: true }}\r\n                  filter=\"agTextColumnFilter\"\r\n                />\r\n                <AgGridColumn\r\n                  headerName=\"사용여부\"\r\n                  field=\"check2\"\r\n                  minWidth={120}\r\n                  columnsMenuParams={{ contractColumnSelection: true }}\r\n                  headerCheckboxSelection\r\n                  checkboxSelection\r\n                />\r\n              </AgGridReact>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mapArea\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(DeliveryUnable);\r\n","D:\\r-test\\backup\\src\\components\\delivery\\DeliveryAvailable.tsx",["206"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal } from '@material-ui/core';\r\n\r\n// CSS\r\nimport '../../css/map/destmanager.css';\r\nimport '../../css/map/copypop.css';\r\n\r\n// Ag-Grid\r\nimport { AgGridReact, AgGridColumn } from '@ag-grid-community/react';\r\nimport { AllModules, GridApi } from '@ag-grid-enterprise/all-modules';\r\nimport '@ag-grid-enterprise/all-modules/dist/styles/ag-grid.css';\r\nimport '@ag-grid-enterprise/all-modules/dist/styles/ag-theme-alpine.css';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport Search from '@material-ui/icons/Search';\r\nimport Close from '@material-ui/icons/Close';\r\nimport NoteAdd from '@material-ui/icons/NoteAdd';\r\nimport DeleteSweep from '@material-ui/icons/DeleteSweep';\r\nimport CheckBox from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlined from '@material-ui/icons/CheckBoxOutlined';\r\nimport Save from '@material-ui/icons/Save';\r\n\r\nimport Home from '@material-ui/icons/Home';\r\nimport Spellcheck from '@material-ui/icons/Spellcheck';\r\nimport AddLocation from '@material-ui/icons/AddLocation';\r\nimport LocationOff from '@material-ui/icons/LocationOff';\r\nimport DeleteForever from '@material-ui/icons/DeleteForever';\r\n\r\n// Popup\r\nimport 'reactjs-popup/dist/index.css';\r\n\r\n// Components\r\nimport { useStyles } from '../common/materialButton';\r\n\r\n// Action\r\nimport { getDestListAsync, deleteDestListAsync } from '../../modules/destination/actions';\r\nimport {\r\n  getCenteruserListAsync1,\r\n  getCenteruserListAsync2,\r\n  getCenteruserListAsync3,\r\n} from '../../modules/delivery/actions';\r\n\r\n// API\r\nimport {\r\n  destListSendData,\r\n  deleteDestListSendData,\r\n} from '../../api/interface/destination/destination';\r\nimport { CenterUserInfoSendData } from '../../api/interface/delivery/delivery';\r\n\r\nimport SidoSelect from '../common/area/SidoSelect';\r\nimport GunGuSelect from '../common/area/GunGuSelect';\r\nimport DongSelect from '../common/area/DongSelect';\r\nimport RiSelector from '../common/area/RiSelector';\r\n\r\nimport { RootState } from '../../modules';\r\n\r\nconst DeliveryAvailable = () => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const closeModal = () => setOpen(false);\r\n\r\n  const [openP, setOpenP] = useState(false);\r\n  const closeModalP = () => setOpenP(false);\r\n\r\n  const [openD, setOpenD] = useState(false);\r\n\r\n  const { loading, data, error } = useSelector((state: RootState) => state.destList.destList);\r\n\r\n  const {\r\n    loading: getCenterUserLoading,\r\n    data: centerUserData,\r\n    error: centerUserError,\r\n  } = useSelector((state: RootState) => state.centerUserList1.centerUserList1);\r\n  const { loading: delDestLoading, data: delDestData, error: delDestError } = useSelector(\r\n    (state: RootState) => state.deleteDestList.result\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(data);\r\n  console.log(centerUserData);\r\n\r\n  // 목적지 타입\r\n  const [destType, setDestType] = useState<string>('%');\r\n  // 목적지 명\r\n  const [destName, setDestName] = useState<string>('');\r\n\r\n  const searchSendData: destListSendData = {\r\n    JobGbn: '1',\r\n    CCCode: '',\r\n    DestType: '%',\r\n    DestName: '%',\r\n  };\r\n\r\n  const centerUserSendData: CenterUserInfoSendData = {\r\n    JobGbn: '1',\r\n    UserID: '김한욱12',\r\n    McodeString: '',\r\n    CCCode: '',\r\n    HelpCenter: '',\r\n  };\r\n\r\n  const searchDestination = () => {\r\n    searchSendData.JobGbn = '1';\r\n    searchSendData.CCCode = '3452';\r\n    searchSendData.DestType = destType;\r\n    searchSendData.DestName = destName === '' ? '%' : `%${destName}%`;\r\n\r\n    dispatch(getDestListAsync.request(searchSendData));\r\n\r\n    dispatch(getCenteruserListAsync1.request(centerUserSendData));\r\n    centerUserSendData.JobGbn = '3';\r\n    centerUserSendData.UserID = '';\r\n    centerUserSendData.McodeString = '6';\r\n    centerUserSendData.CCCode = '';\r\n    centerUserSendData.HelpCenter = 'HC900';\r\n\r\n    dispatch(getCenteruserListAsync2.request(centerUserSendData));\r\n\r\n    centerUserSendData.JobGbn = '5';\r\n    centerUserSendData.UserID = '';\r\n    centerUserSendData.McodeString = '6';\r\n    centerUserSendData.CCCode = '3452';\r\n    centerUserSendData.HelpCenter = '';\r\n\r\n    dispatch(getCenteruserListAsync3.request(centerUserSendData));\r\n  };\r\n\r\n  // 최초 로드 시 미리 목적지 데이터 조회\r\n  useEffect(() => {\r\n    if (!openD) {\r\n      searchDestination();\r\n    }\r\n  }, [openD]);\r\n\r\n  // 검색 버튼 클릭\r\n  const onSearchClick = () => {\r\n    searchDestination();\r\n  };\r\n\r\n  const [gridApi, setGridApi] = useState<GridApi>();\r\n\r\n  const onGridReady = (params: any) => {\r\n    setGridApi(params.api);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!delDestLoading && delDestData) {\r\n      const result: string = String(delDestData);\r\n      const resultMessage: string[] = result.split('@');\r\n      if (resultMessage.length > 1) {\r\n        if (resultMessage[0] !== '00') {\r\n          console.log(resultMessage[1]);\r\n        }\r\n        setOpenD((o) => !o);\r\n      }\r\n    }\r\n  }, [delDestLoading, delDestData]);\r\n\r\n  const searchHidden = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\r\n  // 검색창 열기 / 닫기\r\n  const searchHiddenOpen = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    if (searchHidden.current.style.display === 'block') searchHidden.current.style.display = 'none';\r\n    else searchHidden.current.style.display = 'block';\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"topArea\">\r\n        <div className=\"topAreaLeft\">\r\n          <div className=\"blueLabel fl mt05 ml10\" style={{}}>\r\n            지원센터\r\n          </div>\r\n          <input type=\"text\" className=\"fl baseInput mg05\" style={{ width: '140px' }} />\r\n          <div className=\"blueLabel fl mt05\" style={{}}>\r\n            회원사\r\n          </div>\r\n          <select className=\"fl baseSelect mg05\" style={{ width: '110px' }}>\r\n            <option value=\"\">1</option>\r\n          </select>\r\n          <div className=\"blueLabel fl mt05\" style={{}}>\r\n            지사명\r\n          </div>\r\n          <select className=\"fl baseSelect mg05\" style={{ width: '110px' }}>\r\n            <option value=\"\">1</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"topAreaRight\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fr mr10 mt05\"\r\n            style={{ width: '70px', height: '70px' }}\r\n            startIcon={<Close />}\r\n          >\r\n            닫기\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fr mr05 mt05\"\r\n            style={{ width: '70px', height: '70px' }}\r\n            startIcon={<Search />}\r\n            onClick={onSearchClick}\r\n          >\r\n            검색\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"cb\" />\r\n        <div className=\"blueText fl ml10 mt08\">\r\n          ※ 구역설정방법 : 구역설정시작 클릭 -&gt; 구역정보입력(명칭) -&gt; 우측마우스 구역설정\r\n          -&gt; 구역설정완료 클릭 <br />※ 구역이 겹치는경우 먼저등록된 구역이 적용됩니다. ※\r\n          구역리스트 더블클릭시 구역정보삭제\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"contentsArea\">\r\n        <div className=\"searchArea\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml10 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<NoteAdd />}\r\n          >\r\n            전체 사용함\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml05 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<DeleteSweep />}\r\n          >\r\n            전체 사용안함\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml10 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<CheckBox />}\r\n          >\r\n            전체 선택\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml05 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<CheckBoxOutlined />}\r\n          >\r\n            전체 취소\r\n          </Button>\r\n          <div className=\"blueLabelText fl ml05 mt05 \">지도확대</div>\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"1\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"2\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"3\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"4\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"5\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"6\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"7\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"8\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"9\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"10\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"11\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"12\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"13\" />\r\n          <div className=\"cb\" />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml10 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<AddLocation />}\r\n          >\r\n            구역설정시작\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml05 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<LocationOff />}\r\n          >\r\n            구역설정취소\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml10 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<Save />}\r\n          >\r\n            수정정보 저장\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml05 mt05\"\r\n            style={{ width: '110px' }}\r\n            startIcon={<DeleteForever />}\r\n          >\r\n            선택삭제\r\n          </Button>\r\n          <div className=\"fl\">\r\n            <SidoSelect />\r\n            <GunGuSelect />\r\n            <DongSelect />\r\n            <RiSelector />\r\n          </div>\r\n\r\n          <input type=\"text\" className=\"fl baseInput ml05 mt05\" style={{ width: '90px' }} />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml05 mt05\"\r\n            style={{ width: '90px' }}\r\n            startIcon={<Home />}\r\n          >\r\n            지번검색\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml05 mt05\"\r\n            style={{ width: '90px' }}\r\n            startIcon={<Spellcheck />}\r\n          >\r\n            명칭검색\r\n          </Button>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl ml05 mt05\"\r\n            style={{ width: '100px' }}\r\n            startIcon={<Search />}\r\n            onClick={searchHiddenOpen}\r\n          >\r\n            검색창열기\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"leftArea\">\r\n          <div className=\"blueLabelText fl ml10 mt05 \"> * 구역명칭</div>\r\n          <input type=\"text\" className=\"fl baseInput mg05\" style={{ width: '100px' }} />\r\n\r\n          <div className=\"blueLabelText fl ml10 mt05 \"> 그리기남은횟수</div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"fl baseInput mg05\"\r\n            value=\"100\"\r\n            style={{ width: '28px', color: '#c92929' }}\r\n          />\r\n\r\n          <div className=\"cb\" />\r\n          <div\r\n            style={{\r\n              width: '98%',\r\n              height: '720px',\r\n              marginTop: '5px',\r\n              padding: '0px 5px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: '688px',\r\n                width: '100%',\r\n              }}\r\n              className=\"ag-theme-alpine\"\r\n            >\r\n              <AgGridReact\r\n                modules={AllModules}\r\n                defaultColDef={{\r\n                  flex: 1,\r\n                  resizable: true,\r\n                  menuTabs: ['columnsMenuTab'],\r\n                  columnsMenuParams: { suppressSyncLayoutWithGrid: true },\r\n                  floatingFilter: true,\r\n                }}\r\n                statusBar={{\r\n                  statusPanels: [\r\n                    {\r\n                      statusPanel: 'agTotalAndFilteredRowCountComponent',\r\n                      align: 'left',\r\n                    },\r\n                    {\r\n                      statusPanel: 'agTotalRowCountComponent',\r\n                      align: 'center',\r\n                    },\r\n                    { statusPanel: 'agFilteredRowCountComponent' },\r\n                    { statusPanel: 'agSelectedRowCountComponent' },\r\n                    { statusPanel: 'agAggregationComponent' },\r\n                  ],\r\n                }}\r\n                onGridReady={onGridReady}\r\n                rowData={data!}\r\n                rowSelection=\"multiple\"\r\n                headerHeight={40}\r\n              >\r\n                <AgGridColumn\r\n                  headerName=\"\"\r\n                  field=\"check\"\r\n                  minWidth={40}\r\n                  headerCheckboxSelection\r\n                  headerCheckboxSelectionFilteredOnly\r\n                  checkboxSelection\r\n                />\r\n                <AgGridColumn\r\n                  headerName=\"No\"\r\n                  field=\"NO\"\r\n                  minWidth={80}\r\n                  columnsMenuParams={{\r\n                    suppressColumnFilter: true,\r\n                    suppressColumnSelectAll: true,\r\n                    suppressColumnExpandAll: true,\r\n                  }}\r\n                  filter=\"agTextColumnFilter\"\r\n                />\r\n                <AgGridColumn\r\n                  headerName=\"구역명\"\r\n                  field=\"DEST_NAME\"\r\n                  minWidth={120}\r\n                  columnsMenuParams={{ contractColumnSelection: true }}\r\n                  filter=\"agTextColumnFilter\"\r\n                />\r\n                <AgGridColumn\r\n                  headerName=\"사용여부\"\r\n                  field=\"RIDER_NAME\"\r\n                  minWidth={120}\r\n                  columnsMenuParams={{ contractColumnSelection: true }}\r\n                  filter=\"agTextColumnFilter\"\r\n                />\r\n              </AgGridReact>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mapArea\">\r\n          <img src=\"images/foodquick_new.ico\" alt=\"1\" style={{ width: '928px', height: '734px' }} />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              top: '500px',\r\n              left: '1100px',\r\n              fontSize: '120px',\r\n            }}\r\n          >\r\n            MAP AREA\r\n          </div>\r\n          <div\r\n            ref={searchHidden}\r\n            style={{\r\n              position: 'absolute',\r\n              top: '180px',\r\n              height: '731px',\r\n              width: '350px',\r\n              display: 'none',\r\n            }}\r\n            className=\"ag-theme-alpine\"\r\n          >\r\n            <AgGridReact\r\n              modules={AllModules}\r\n              defaultColDef={{\r\n                flex: 1,\r\n                resizable: true,\r\n                menuTabs: ['columnsMenuTab'],\r\n                columnsMenuParams: { suppressSyncLayoutWithGrid: true },\r\n                floatingFilter: true,\r\n              }}\r\n              statusBar={{\r\n                statusPanels: [\r\n                  {\r\n                    statusPanel: 'agTotalAndFilteredRowCountComponent',\r\n                    align: 'left',\r\n                  },\r\n                  {\r\n                    statusPanel: 'agTotalRowCountComponent',\r\n                    align: 'center',\r\n                  },\r\n                  { statusPanel: 'agFilteredRowCountComponent' },\r\n                  { statusPanel: 'agSelectedRowCountComponent' },\r\n                  { statusPanel: 'agAggregationComponent' },\r\n                ],\r\n              }}\r\n              onGridReady={onGridReady}\r\n              rowData={data!}\r\n              rowSelection=\"multiple\"\r\n              headerHeight={40}\r\n            >\r\n              <AgGridColumn\r\n                headerName=\"\"\r\n                field=\"check\"\r\n                minWidth={40}\r\n                headerCheckboxSelection\r\n                headerCheckboxSelectionFilteredOnly\r\n                checkboxSelection\r\n              />\r\n              <AgGridColumn\r\n                headerName=\"No\"\r\n                field=\"NO\"\r\n                minWidth={80}\r\n                columnsMenuParams={{\r\n                  suppressColumnFilter: true,\r\n                  suppressColumnSelectAll: true,\r\n                  suppressColumnExpandAll: true,\r\n                }}\r\n                filter=\"agTextColumnFilter\"\r\n              />\r\n              <AgGridColumn\r\n                headerName=\"구역명\"\r\n                field=\"DEST_NAME\"\r\n                minWidth={120}\r\n                columnsMenuParams={{ contractColumnSelection: true }}\r\n                filter=\"agTextColumnFilter\"\r\n              />\r\n              <AgGridColumn\r\n                headerName=\"사용여부\"\r\n                field=\"RIDER_NAME\"\r\n                minWidth={120}\r\n                columnsMenuParams={{ contractColumnSelection: true }}\r\n                filter=\"agTextColumnFilter\"\r\n              />\r\n            </AgGridReact>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(DeliveryAvailable);\r\n","D:\\r-test\\backup\\src\\components\\destinationManagement\\DestinationManagement.tsx",["207"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Popup from 'reactjs-popup';\r\nimport { Modal } from '@material-ui/core';\r\n\r\n// CSS\r\nimport '../../css/map/destmanager.css';\r\nimport '../../css/map/copypop.css';\r\n\r\n// Ag-Grid\r\nimport { AgGridReact, AgGridColumn } from '@ag-grid-community/react';\r\nimport { AllModules, GridApi } from '@ag-grid-enterprise/all-modules';\r\nimport '@ag-grid-enterprise/all-modules/dist/styles/ag-grid.css';\r\nimport '@ag-grid-enterprise/all-modules/dist/styles/ag-theme-alpine.css';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport Search from '@material-ui/icons/Search';\r\nimport Close from '@material-ui/icons/Close';\r\nimport AddCircle from '@material-ui/icons/AddCircle';\r\nimport CheckCircle from '@material-ui/icons/CheckCircle';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Home from '@material-ui/icons/Home';\r\nimport Spellcheck from '@material-ui/icons/Spellcheck';\r\nimport AddLocation from '@material-ui/icons/AddLocation';\r\nimport LocationOff from '@material-ui/icons/LocationOff';\r\nimport DeleteForever from '@material-ui/icons/DeleteForever';\r\n\r\n// Popup\r\n\r\nimport 'reactjs-popup/dist/index.css';\r\n\r\n// Components\r\nimport { useStyles } from '../common/materialButton';\r\nimport CopyDestination from './popup/CopyDestination';\r\nimport CopyDestinationPrivate from './popup/CopyDestinationPrivate';\r\n\r\n// Action\r\nimport { getDestListAsync, deleteDestListAsync } from '../../modules/destination/actions';\r\n\r\n// API\r\nimport {\r\n  destListSendData,\r\n  deleteDestListSendData,\r\n} from '../../api/interface/destination/destination';\r\n\r\nimport SidoSelect from '../common/area/SidoSelect';\r\nimport GunGuSelect from '../common/area/GunGuSelect';\r\nimport DongSelect from '../common/area/DongSelect';\r\nimport RiSelector from '../common/area/RiSelector';\r\n\r\nimport { RootState } from '../../modules';\r\n\r\ninterface ICenter {\r\n  cccode: string;\r\n}\r\n\r\nconst DestinationManagement = ({ cccode }: ICenter) => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const closeModal = () => setOpen(false);\r\n\r\n  const [openP, setOpenP] = useState(false);\r\n  const closeModalP = () => setOpenP(false);\r\n\r\n  const [openD, setOpenD] = useState(false);\r\n\r\n  const { loading, data, error } = useSelector((state: RootState) => state.destList.destList);\r\n  const { loading: delDestLoading, data: delDestData, error: delDestError } = useSelector(\r\n    (state: RootState) => state.deleteDestList.result\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // 목적지 타입\r\n  const [destType, setDestType] = useState<string>('%');\r\n  // 목적지 명\r\n  const [destName, setDestName] = useState<string>('');\r\n\r\n  const searchSendData: destListSendData = {\r\n    JobGbn: '1',\r\n    CCCode: cccode,\r\n    DestType: '%',\r\n    DestName: '%',\r\n  };\r\n\r\n  const searchDestination = () => {\r\n    searchSendData.JobGbn = '1';\r\n    searchSendData.CCCode = cccode;\r\n    searchSendData.DestType = destType;\r\n    searchSendData.DestName = destName === '' ? '%' : `%${destName}%`;\r\n\r\n    dispatch(getDestListAsync.request(searchSendData));\r\n  };\r\n\r\n  // 최초 로드 시 미리 목적지 데이터 조회\r\n  useEffect(() => {\r\n    if (!openD) {\r\n      searchDestination();\r\n    }\r\n  }, [openD]);\r\n\r\n  // 검색 버튼 클릭\r\n  const onSearchClick = () => {\r\n    searchDestination();\r\n  };\r\n\r\n  // 목적지 타입 선택\r\n  const onDestTypeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    e.preventDefault();\r\n    setDestType(e.target.value);\r\n  };\r\n\r\n  // 목적지 명 입력\r\n  const conDestNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    setDestName(e.target.value);\r\n  };\r\n\r\n  const [gridApi, setGridApi] = useState<GridApi>();\r\n\r\n  const onGridReady = (params: any) => {\r\n    setGridApi(params.api);\r\n  };\r\n\r\n  const onSelectDelete = () => {\r\n    const sendData: deleteDestListSendData = {\r\n      Seqs: [],\r\n    };\r\n    if (gridApi != null) {\r\n      const checkData: any[] = gridApi.getSelectedNodes();\r\n      if (checkData.length > 0) {\r\n        checkData.forEach((idata) => {\r\n          sendData.Seqs.push(String(idata.data.SEQNO));\r\n        });\r\n        dispatch(deleteDestListAsync.request(sendData));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!delDestLoading && delDestData) {\r\n      const result: string = String(delDestData);\r\n      const resultMessage: string[] = result.split('@');\r\n      if (resultMessage.length > 1) {\r\n        if (resultMessage[0] !== '00') {\r\n          console.log(resultMessage[1]);\r\n        }\r\n        setOpenD((o) => !o);\r\n      }\r\n    }\r\n  }, [delDestLoading, delDestData]);\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"topArea\">\r\n        <div className=\"topAreaLeft\">\r\n          <div className=\"blueLabel fl mt05 ml10\">목적지</div>\r\n          <input type=\"text\" className=\"fl baseInput mg05\" style={{ width: '300px' }} />\r\n          <div className=\"blueLabel fl mt05 ml05\">목적지 타입</div>\r\n          <select className=\"fl baseSelect mg05\" onChange={onDestTypeChange}>\r\n            <option value=\"%\">전체</option>\r\n            <option value=\"A\">명칭</option>\r\n            <option value=\"B\">빌딩</option>\r\n            <option value=\"P\">아파트</option>\r\n            <option value=\"H\">주택</option>\r\n            <option value=\"Y\">연립</option>\r\n            <option value=\"O\">원룸</option>\r\n            <option value=\"M\">모텔</option>\r\n            <option value=\"S\">맨션</option>\r\n            <option value=\"U\">학교</option>\r\n            <option value=\"F\">오피스텔</option>\r\n            <option value=\"C\">병원</option>\r\n            <option value=\"G\">관공서</option>\r\n            <option value=\"D\">동</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"topAreaRight\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fr mr10 mt05\"\r\n            style={{ width: '70px', height: '70px' }}\r\n            startIcon={<Close />}\r\n          >\r\n            닫기\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fr mr05 mt05\"\r\n            style={{ width: '70px', height: '70px' }}\r\n            startIcon={<Search />}\r\n            onClick={onSearchClick}\r\n          >\r\n            검색\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"cb\" />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n          style={{ width: '300px' }}\r\n          startIcon={<Search />}\r\n        >\r\n          다음검색\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n          style={{ width: '300px' }}\r\n          startIcon={<SaveIcon />}\r\n          onClick={() => setOpen((o) => !o)}\r\n        >\r\n          목적지좌표 다른지점으로 복사\r\n        </Button>\r\n\r\n        <Popup\r\n          open={open}\r\n          closeOnDocumentClick={false}\r\n          onClose={closeModal}\r\n          contentStyle={{ width: '662px', height: '800px' }}\r\n        >\r\n          <div>\r\n            <CopyDestination closeModal={closeModal} />\r\n          </div>\r\n        </Popup>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n          style={{ width: '300px' }}\r\n          startIcon={<SaveIcon />}\r\n          onClick={() => setOpenP((o) => !o)}\r\n        >\r\n          목적지좌표 다른지점으로 개별복사\r\n        </Button>\r\n\r\n        <Popup\r\n          open={openP}\r\n          closeOnDocumentClick={false}\r\n          onClose={closeModalP}\r\n          contentStyle={{ width: '960px', height: '800px' }}\r\n        >\r\n          <div>\r\n            <CopyDestinationPrivate closeModal={closeModalP} />\r\n          </div>\r\n        </Popup>\r\n      </div>\r\n\r\n      <div className=\"contentsArea\">\r\n        <div className=\"searchArea\">\r\n          <div className=\"blueText fl ml10 mt10\">\r\n            ※ 목적지리스트 더블클릭시 등록한 목적지를 삭제 . ※ 지도 마우스 우측버튼 클릭시 해당위치\r\n            목적지 등록가능.\r\n          </div>\r\n          <div className=\"blueLabelText fl ml10 mt05 \">지도확대</div>\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"1\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"2\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"3\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"4\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"5\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"6\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"7\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"8\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"9\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"10\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"11\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"12\" />\r\n          <input type=\"button\" className=\"areaButton ml03 mt05\" value=\"13\" />\r\n          <div className=\"cb\" />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl_width_100 ml10\"\r\n            startIcon={<AddCircle />}\r\n          >\r\n            목적지 추가\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl_width_100 ml05\"\r\n            startIcon={<CheckCircle />}\r\n          >\r\n            목적지 저장\r\n          </Button>\r\n\r\n          <SidoSelect />\r\n          <GunGuSelect />\r\n          <DongSelect />\r\n          <RiSelector />\r\n\r\n          <input\r\n            type=\"text\"\r\n            onChange={conDestNameChange}\r\n            className=\"fl_width_120 baseInput ml05 mt05\"\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl_width_90 ml05\"\r\n            startIcon={<Home />}\r\n          >\r\n            지번검색\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl_width_90 ml05\"\r\n            startIcon={<Spellcheck />}\r\n          >\r\n            명칭검색\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fr_width_100 ml05 mr10\"\r\n            startIcon={<LocationOff />}\r\n          >\r\n            위치해제\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fr_width_100 ml05\"\r\n            startIcon={<AddLocation />}\r\n          >\r\n            위치확정\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fr_width_100 ml05\"\r\n            startIcon={<Search />}\r\n          >\r\n            검색창열기\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"leftArea\">\r\n          <div className=\"blueLabelText fl ml10 mt05 \"> * 목적지</div>\r\n          <input type=\"text\" className=\"fl baseInput mg05\" style={{ width: '128px' }} />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"fl mt05\"\r\n            startIcon={<DeleteForever />}\r\n            onClick={onSelectDelete}\r\n          >\r\n            선택삭제\r\n          </Button>\r\n\r\n          <Modal\r\n            open={openD}\r\n            aria-labelledby=\"server-modal-title\"\r\n            aria-describedby=\"server-modal-description\"\r\n            className={classes.modal}\r\n          >\r\n            <div className={classes.paper}>\r\n              <h2>선택하신 목적지를 삭제 하였습니다.</h2>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                className=\"fr ml05 mt05\"\r\n                startIcon={<Close />}\r\n                onClick={() => setOpenD((o) => !o)}\r\n              >\r\n                확인\r\n              </Button>\r\n            </div>\r\n          </Modal>\r\n\r\n          <div className=\"cb\" />\r\n\r\n          <div className=\"blueLabelText fl ml10 mt05 \"> 목적지 타입</div>\r\n          <select className=\"fl baseSelect ml05 mt05\" style={{ width: '132px' }}>\r\n            <option value=\"\">---------선택---------</option>\r\n            <option value=\"A\">명칭</option>\r\n            <option value=\"B\">빌딩</option>\r\n            <option value=\"P\">아파트</option>\r\n            <option value=\"H\">주택</option>\r\n            <option value=\"Y\">연립</option>\r\n            <option value=\"O\">원룸</option>\r\n            <option value=\"M\">모텔</option>\r\n            <option value=\"S\">맨션</option>\r\n            <option value=\"U\">학교</option>\r\n            <option value=\"F\">오피스텔</option>\r\n            <option value=\"C\">병원</option>\r\n            <option value=\"G\">관공서</option>\r\n          </select>\r\n          <div className=\"cb\" />\r\n          <div\r\n            style={{\r\n              width: '98%',\r\n              height: '720px',\r\n              marginTop: '10px',\r\n              padding: '0px 5px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: '650px',\r\n                width: '100%',\r\n              }}\r\n              className=\"ag-theme-alpine\"\r\n            >\r\n              <AgGridReact\r\n                modules={AllModules}\r\n                defaultColDef={{\r\n                  flex: 1,\r\n                  resizable: true,\r\n                  menuTabs: ['columnsMenuTab'],\r\n                  columnsMenuParams: { suppressSyncLayoutWithGrid: true },\r\n                }}\r\n                statusBar={{\r\n                  statusPanels: [\r\n                    {\r\n                      statusPanel: 'agTotalAndFilteredRowCountComponent',\r\n                      align: 'left',\r\n                    },\r\n                    {\r\n                      statusPanel: 'agTotalRowCountComponent',\r\n                      align: 'center',\r\n                    },\r\n                    { statusPanel: 'agFilteredRowCountComponent' },\r\n                    { statusPanel: 'agSelectedRowCountComponent' },\r\n                    { statusPanel: 'agAggregationComponent' },\r\n                  ],\r\n                }}\r\n                onGridReady={onGridReady}\r\n                rowData={data!}\r\n                rowSelection=\"multiple\"\r\n                headerHeight={70}\r\n              >\r\n                <AgGridColumn\r\n                  headerName=\"\"\r\n                  field=\"check\"\r\n                  minWidth={50}\r\n                  headerCheckboxSelection\r\n                  headerCheckboxSelectionFilteredOnly\r\n                  checkboxSelection\r\n                />\r\n                <AgGridColumn headerName=\"No\" field=\"NO\" minWidth={75} width={75} />\r\n                <AgGridColumn\r\n                  headerName=\"목적지\"\r\n                  field=\"DEST_NAME\"\r\n                  minWidth={200}\r\n                  width={200}\r\n                  columnsMenuParams={{ contractColumnSelection: true }}\r\n                  filter=\"agTextColumnFilter\"\r\n                />\r\n                <AgGridColumn\r\n                  headerName=\"동명\"\r\n                  field=\"DONG_NAME\"\r\n                  minWidth={100}\r\n                  columnsMenuParams={{ contractColumnSelection: true }}\r\n                  filter=\"agTextColumnFilter\"\r\n                />\r\n                <AgGridColumn\r\n                  headerName=\"목적지 타입\"\r\n                  field=\"DEST_TYPE\"\r\n                  minWidth={100}\r\n                  columnsMenuParams={{ contractColumnSelection: true }}\r\n                  hide\r\n                />\r\n                <AgGridColumn\r\n                  headerName=\"경도\"\r\n                  field=\"LON\"\r\n                  minWidth={100}\r\n                  columnsMenuParams={{ contractColumnSelection: true }}\r\n                  hide\r\n                />\r\n                <AgGridColumn\r\n                  headerName=\"위도\"\r\n                  field=\"LAT\"\r\n                  minWidth={100}\r\n                  columnsMenuParams={{ contractColumnSelection: true }}\r\n                  hide\r\n                />\r\n              </AgGridReact>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mapArea\">Naver Map</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(DestinationManagement);\r\n","D:\\r-test\\backup\\src\\modules\\destination\\types.ts",[],"D:\\r-test\\backup\\src\\modules\\destination\\reducer.ts",[],"D:\\r-test\\backup\\src\\modules\\destination\\sagas.ts",[],"D:\\r-test\\backup\\src\\modules\\destination\\actions.ts",[],"D:\\r-test\\backup\\src\\modules\\common\\reducer.ts",[],"D:\\r-test\\backup\\src\\modules\\common\\types.ts",[],"D:\\r-test\\backup\\src\\modules\\common\\actions.ts",[],"D:\\r-test\\backup\\src\\modules\\common\\sagas.ts",[],"D:\\r-test\\backup\\src\\lib\\reducerUtils.ts",[],"D:\\r-test\\backup\\src\\lib\\createAsyncSaga.ts",[],"D:\\r-test\\backup\\src\\api\\delivery\\delivery.ts",[],"D:\\r-test\\backup\\src\\components\\common\\area\\GunGuSelect.tsx",["208"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../modules';\r\nimport { IGunguInfo } from '../../../api/interface/common/area/area';\r\nimport { getGunguListAsync } from '../../../modules/common/actions';\r\nimport { setGungu } from '../../../modules/component/area/area';\r\n\r\nconst GunGuSelect = (style: any) => {\r\n  const { loading, data, error } = useSelector((state: RootState) => state.gunguList.gunguList);\r\n  const dispatch = useDispatch();\r\n\r\n  // 선택 시도\r\n  const sido = useSelector((state: RootState) => state.areaStateInfo.sido);\r\n\r\n  // 군구 선택\r\n  const onChangeGungu = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    e.preventDefault();\r\n    dispatch(setGungu(e.target.value));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      dispatch(\r\n        getGunguListAsync.request({\r\n          SiDo: sido,\r\n        })\r\n      );\r\n    }\r\n  }, [sido]);\r\n\r\n  return (\r\n    <>\r\n      <select\r\n        className=\"fl_width_100 baseSelect ml05 mt05\"\r\n        onChange={onChangeGungu}\r\n        style={style.style}\r\n      >\r\n        {data && data.length > 0 && <option value=\"\">------선택------</option>}\r\n        {data &&\r\n          data.length > 0 &&\r\n          data.map((gungu: IGunguInfo) => (\r\n            <option key={gungu.B_MIDDLE} value={gungu.B_MIDDLE}>\r\n              {gungu.B_MIDDLE}\r\n            </option>\r\n          ))}\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GunGuSelect;\r\n","D:\\r-test\\backup\\src\\components\\common\\materialButton.tsx",[],"D:\\r-test\\backup\\src\\components\\common\\area\\SidoSelect.tsx",[],"D:\\r-test\\backup\\src\\components\\common\\area\\DongSelect.tsx",["209"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../modules';\r\nimport { IDongInfo } from '../../../api/interface/common/area/area';\r\nimport { getDongListAsync } from '../../../modules/common/actions';\r\nimport { setDong } from '../../../modules/component/area/area';\r\n\r\nconst DongSelect = (style: any) => {\r\n  const { loading, data, error } = useSelector((state: RootState) => state.dongList.dongList);\r\n  const dispatch = useDispatch();\r\n\r\n  // 선택 시도\r\n  const sido = useSelector((state: RootState) => state.areaStateInfo.sido);\r\n  // 선택 군구\r\n  const gungu = useSelector((state: RootState) => state.areaStateInfo.gungu);\r\n\r\n  // 동 선택\r\n  const onChangeDong = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    e.preventDefault();\r\n    dispatch(setDong(e.target.value));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      dispatch(\r\n        getDongListAsync.request({\r\n          SiDo: sido,\r\n          GunGu: gungu,\r\n        })\r\n      );\r\n    }\r\n  }, [sido, gungu, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <select\r\n        className=\"fl_width_100 baseSelect ml05 mt05\"\r\n        onChange={onChangeDong}\r\n        style={style.style}\r\n      >\r\n        {data && data.length > 0 && <option value=\"\">------선택------</option>}\r\n        {data &&\r\n          data.length > 0 &&\r\n          data.map((dong: IDongInfo) => (\r\n            <option key={dong.B_SMALL} value={dong.B_SMALL}>\r\n              {dong.B_SMALL}\r\n            </option>\r\n          ))}\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DongSelect;\r\n","D:\\r-test\\backup\\src\\components\\common\\area\\RiSelector.tsx",["210"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../modules';\r\nimport { IRiInfo } from '../../../api/interface/common/area/area';\r\nimport { getRiListAsync } from '../../../modules/common/actions';\r\n\r\nconst RiSelector = (style: any) => {\r\n  const { loading, data, error } = useSelector((state: RootState) => state.riList.riList);\r\n  const dispatch = useDispatch();\r\n\r\n  // 선택 시도\r\n  const sido = useSelector((state: RootState) => state.areaStateInfo.sido);\r\n  // 선택 군구\r\n  const gungu = useSelector((state: RootState) => state.areaStateInfo.gungu);\r\n  // 동 선택\r\n  const dong = useSelector((state: RootState) => state.areaStateInfo.dong);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      dispatch(\r\n        getRiListAsync.request({\r\n          SiDo: sido,\r\n          GunGu: gungu,\r\n          Dong: dong,\r\n        })\r\n      );\r\n    }\r\n  }, [sido, gungu, dong, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <select className=\"fl_width_100 baseSelect ml05 mt05\" style={style.style}>\r\n        {data && data.length > 0 && <option value=\"\">------선택------</option>}\r\n        {data &&\r\n          data.length > 0 &&\r\n          data.map((ri: IRiInfo) => (\r\n            <option key={ri.B_DETAIL} value={ri.B_DETAIL}>\r\n              {ri.B_DETAIL}\r\n            </option>\r\n          ))}\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RiSelector;\r\n","D:\\r-test\\backup\\src\\components\\destinationManagement\\popup\\CopyDestinationPrivate.tsx",[],"D:\\r-test\\backup\\src\\components\\destinationManagement\\popup\\CopyDestination.tsx",[],"D:\\r-test\\backup\\src\\api\\destination\\destination.ts",[],"D:\\r-test\\backup\\src\\api\\client.ts",[],"D:\\r-test\\backup\\src\\api\\common\\area\\areaAPI.ts",[],"D:\\r-test\\backup\\src\\containers\\shop\\ShopfeeContainer.tsx",[],"D:\\r-test\\backup\\src\\components\\shop\\ShopFee.tsx",[],"D:\\r-test\\backup\\src\\components\\shop\\popup\\CopyShopfee.tsx",[],"D:\\r-test\\backup\\src\\containers\\shop\\ShoplocationContainer.tsx",[],"D:\\r-test\\backup\\src\\components\\shop\\ShopLocation.tsx",[],"D:\\r-test\\backup\\src\\components\\shop\\popup\\ShopLocation.tsx",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":121,"column":15,"nodeType":"223","endLine":129,"endColumn":15},{"ruleId":"221","severity":1,"message":"224","line":208,"column":6,"nodeType":"225","endLine":208,"endColumn":13,"suggestions":"226"},{"ruleId":"221","severity":1,"message":"224","line":137,"column":6,"nodeType":"225","endLine":137,"endColumn":13,"suggestions":"227"},{"ruleId":"221","severity":1,"message":"224","line":137,"column":6,"nodeType":"225","endLine":137,"endColumn":13,"suggestions":"228"},{"ruleId":"221","severity":1,"message":"224","line":102,"column":6,"nodeType":"225","endLine":102,"endColumn":13,"suggestions":"229"},{"ruleId":"221","severity":1,"message":"230","line":29,"column":6,"nodeType":"225","endLine":29,"endColumn":12,"suggestions":"231"},{"ruleId":"221","severity":1,"message":"232","line":32,"column":6,"nodeType":"225","endLine":32,"endColumn":29,"suggestions":"233"},{"ruleId":"221","severity":1,"message":"232","line":28,"column":6,"nodeType":"225","endLine":28,"endColumn":35,"suggestions":"234"},"lines-around-directive",["235"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'searchDestination'. Either include it or remove the dependency array.","ArrayExpression",["236"],["237"],["238"],["239"],"React Hook useEffect has missing dependencies: 'dispatch' and 'loading'. Either include them or remove the dependency array.",["240"],"React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.",["241"],["242"],"padding-line-between-statements",{"desc":"243","fix":"244"},{"desc":"243","fix":"245"},{"desc":"243","fix":"246"},{"desc":"243","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [openD, searchDestination]",{"range":"254","text":"255"},{"range":"256","text":"255"},{"range":"257","text":"255"},{"range":"258","text":"255"},"Update the dependencies array to be: [dispatch, loading, sido]",{"range":"259","text":"260"},"Update the dependencies array to be: [sido, gungu, dispatch, loading]",{"range":"261","text":"262"},"Update the dependencies array to be: [sido, gungu, dong, dispatch, loading]",{"range":"263","text":"264"},[6104,6111],"[openD, searchDestination]",[4409,4416],[4378,4385],[3254,3261],[932,938],"[dispatch, loading, sido]",[1048,1071],"[sido, gungu, dispatch, loading]",[919,948],"[sido, gungu, dong, dispatch, loading]"]